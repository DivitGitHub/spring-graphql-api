/*
 * This file is generated by jOOQ.
 */
package com.divitngoc.generated;


import com.divitngoc.generated.tables.Artist;
import com.divitngoc.generated.tables.Song;

import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index PRIMARY_KEY_7 = Indexes0.PRIMARY_KEY_7;
    public static final Index FK_SONG_ARTIST_ID_INDEX_2 = Indexes0.FK_SONG_ARTIST_ID_INDEX_2;
    public static final Index PRIMARY_KEY_2 = Indexes0.PRIMARY_KEY_2;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index PRIMARY_KEY_7 = Internal.createIndex("PRIMARY_KEY_7", Artist.ARTIST, new OrderField[] { Artist.ARTIST.ID }, true);
        public static Index FK_SONG_ARTIST_ID_INDEX_2 = Internal.createIndex("FK_SONG_ARTIST_ID_INDEX_2", Song.SONG, new OrderField[] { Song.SONG.ARTIST_ID }, false);
        public static Index PRIMARY_KEY_2 = Internal.createIndex("PRIMARY_KEY_2", Song.SONG, new OrderField[] { Song.SONG.ID }, true);
    }
}
